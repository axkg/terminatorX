<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE section SYSTEM "./tX.dtd">
<section name="faq"> &db; <faq>
    <qa>
      <question>What is terminatorX?</question>
      <answer>
        <para>terminatorX is a realtime audio synthesizer that allows you to &quot;scratch&quot; on
          digitally sampled audio data (*.wav, *.au, *.ogg, *.mp3, etc.) the way hiphop-DJs scratch
          on vinyl records. It features multiple turntables, realtime effects (buit-in as well as
            <dblink id="ladspa"/> plugin effects), a sequencer and MIDI interface - all accessible
          through an easy-to-use gtk+ GUI. <bold>This software is designed to run under Linux,
            FreeBSD and the like</bold>.</para>
      </answer>
    </qa>
    <qa>
      <question>What does it cost?</question>
      <answer>
        <para>Nothing. TerminatorX is <link ref="http://www.fsf.org/philosophy/free-sw.html">free
          software</link>. Read the <link ref="COPYING">license</link> (GPL V2).</para>
      </answer>
    </qa>
    <qa>
      <question>What platforms does it run on?</question>
      <answer>
        <para>TerminatorX should run on any recent Linux or FreeBSD system. I develop terminatorX on
          an X86-System, but the source contains support for big endian machines (PowerPC for
          example). If you experience platform related troubles, please let me know.</para>
      </answer>
    </qa>
    <qa>
      <question>What audio quality is supported?</question>
      <answer>
        <para>TerminatorX operates at an arbitrary sampling rate with 16Bit samples and 2 channels
          (aka stereo). Samples will be converted to mono on loading.</para>
      </answer>
    </qa>
    <qa>
      <question>Why does it take terminatorX so long to load samples?</question>
      <answer>
        <para>This depends on the file your loading. Wavfiles are loaded with the buit-in wave loading
          routines (if enabled on compile time) and this happens very fast. For compressed audio
          files the necessary decompression will consume quite some CPU time on loading.</para>
        <para>Since Version 3.73 loading of audio files has been significantly accelerated with the
          libaudiofile, libvorbis and mad methods.</para>
      </answer>
    </qa>
    <qa>
      <question>Why doesn't terminatorX support mmap'ed wav reading?</question>
      <answer>
        <para>Oh well due to my laziness I guess. <person>
            <name>Benno Senoner</name>
            <email>sbenno@gardena.net</email>
          </person> wrote a <link
            ref="http://www.gardena.net/benno/linux/terminatorX-3.2-mmap.patch"> patch</link>
          against 3.2 to support &quot;on-the-fly&quot; reading of wavfiles. The problem is the
          patch wasn't applicable to later versions of terminatorX, nor would it work with sox/mpg123
          support. I still plan to port the patch to the newer releases sometime.</para>
      </answer>
    </qa>
    <qa>
      <question>How can I use a second mouse, a joystick or other input devices for scratching?</question>
      <answer>
        <para>
          <bold>Update:</bold> If you want to use your joystick along with your mouse I suggest
          using my tiny <dblink id="aseqjoy"/> tool to connect your joystick to the MIDI input port
          of terminatorX.</para>
        <para>If you want to use another mouse however, you need to configure this mouse as an
          XFree86 XInput devices and from what I've read I assume you'll need to have XFree86
          3.3.3.1 or higher. If you want to know how to do this read your XF86Config manual page
          (run man XF86Config) and find the part on &quot;the optional XInput section&quot;. If you
          successfully configured your second (third ...) mouse / input device for XFree86 you now
          need to turn on XInput-support in the Options-dialog of terminatorX and you have to select
          the XInput device you want terminatorX to initialize. Now either press &quot;Apply&quot;
          or &quot;Ok&quot; and you should be able to scratch with that devices next time you press &quot;Start&quot;.</para>
      </answer>
    </qa>
    <qa>
      <question>Why do I get &quot;./terminatorX: undefined symbol:
        _t24__default_alloc_template2b1i0.free_list&quot; when I run terminatorX?</question>
      <answer>
        <para>You probably downloaded the binary-rpm-package and your libstdc++ is outdated. This
          seems to occur on Mandrake systems only. Upgrading with a newer libstdc++ package should
          fix this.</para>
      </answer>
    </qa>
    <qa>
      <question>Why do I get &quot;tX_seqpar.h:25: list: No such file or directory&quot; when
        building terminatorX myself?</question>
      <answer>
        <para>You don't have the libstdc++ headers installed. Install the libstdc++-devel package
          for the libstdc++-package you have installed.</para>
      </answer>
    </qa>
    <qa>
      <question>What can I do if my mouse doesn't work in scratch mode?</question>
      <answer>
        <para>Now this issue is rather tricky, as it seems a lot of problems can be the reason here,
          but there are some things you can try: <itemizedlist>
            <listitem>
              <nopara>Make sure that your X-Server supports XFree86-DGA. Remove any lines that read</nopara>
              <para>
                <screen>Option &quot;omit xfree86-dga&quot;</screen>
              </para>
              <para>from your <screen>XF86Config</screen>. Check whether the Server loaded DGA by
                running <bold>xdpyinfo</bold> - if DGA is loaded one of the lines you get from
                xdpyinfo should read <italic>XFree86-DGA</italic>. To check whether DGA actually
                works run <bold>dga</bold> as root - <red>Warning:</red> the only way to exit this
                tool is pressing 'q' on your keyboard - and it might take some seconds until it reacts.</para>
            </listitem>
            <listitem>
              <nopara>Try running terminatorX as root. This fixes the problem for most people.</nopara>
            </listitem>
          </itemizedlist>
        </para>
        <para>If all this doesn't help let me know.</para>
      </answer>
    </qa>
    <qa>
      <question>Should I install terminatorX suid root?</question>
      <answer>
        <para>Like all audio applications terminatorX' performance improves significantly
          from running with realtime scheduling priority. However current Linux or *BSD
          systems don't allow regular users to achieve realtime priority, so you need
          to install terminatorX suid-root if you want to allow regular users to run terminatorX
          with realtime priority.
        </para>
        
        <para><red><bold>Note:</bold></red> installing any program suid-root is potentially <bold>dangerous</bold>
          and could be exploited - so if other people have access to this machine, too, you
          should reduce the number of suid-root programs.
        </para>
        
        <para>terminatorX provides two methods of running suid-root, via the following
          configure switches:
          <itemizedlist>
            <listitem><para><screen>--enable-capabilities</screen>: this method (enabled
              by default) drops root privileges very early (which is good) and only keeps
              the capability of renice-ing processes. It is Linux-specific though and requires
              a not-too-old 2.4.* kernel and the <dblink id="libcap"/> library.
            </para></listitem>
            <listitem><para><screen>--enable-suidroot</screen>: this method is now disabled
              by default as it is potientially more dangerous. The problems discussed in this
              <link ref="http://www.securityfocus.com/archive/1/328469">bugtraq post</link>
              have been fixed - but there might be other problems. Note that exploiting this
              makes only sense on current Linux systems that use an extra manager thread
              for threaded applications.</para>
              <para><bold>Note:</bold> RedHat 9 Kernels seem to not support this method
                anymore which is probably related to their NPTL implementation. So, if you
                want suid-root with RH 9 use the capabilities method.
              </para>
            </listitem>
          </itemizedlist>          
        </para>
        
        <para>
          <red><bold>Again:</bold></red> both methods might have yet unknown flaws so if you 
          want to be 100% sure that your terminatorX installation is no security
          threat <bold>do not install terminatorX suid-root</bold>.
        </para>
        <!--<para><bold>No</bold>. While I recommended installing terminatorX suid root before - I no 
          longer do for two reasons:
          <itemizedlist>            
            <listitem><nopara>According to this
              <link ref="http://www.securityfocus.com/archive/1/328469">bugtraq posting</link> it is 
              insecure (I've always warned you before). Although this specific exploit is fixable I'm 
              rather sure it would be easy to create others.</nopara></listitem>
            <listitem><nopara>Some machines seem to deadlock with the engine thread
              running with rt-scheduling for no obvious reason. Unluckily this is pretty hard
              to debug.</nopara></listitem>
          </itemizedlist>         
        </para>
        <para>So instead of running terminatorX suid root I recommend using either 
          <link ref="http://www.kernel.org">Linux 2.6.x</link> or
          <person>
            <name>Con Kolivas</name>
            <email>conman@kolivas.org</email>
          </person>' <link ref="http://members.optusnet.com.au/ckolivas/kernel/">patches</link>
          against Linux 2.4.x. With these new scheduler tweaks terminatorX performs very well without
          extra privileges.</para>
          <para>Installing terminatorX <italic>suid root</italic> improves terminatorX' performance
          significantly for non-root users - as terminatorX will use the suid-root privileges to
          create the engine thread with realtime-scheduling-priority. Immediately after the creation
          of the thread terminatorX drops root privileges before any files or devices are accessed.
          The problem is: the Linux pthreads manager thread can not be told to drop it's root
          privileges, which means that while the two threads executing terminatorX code run with the
          real user's privileges, the pthread manager thread still runs with root-privileges. While
          I cannot see how a malicious user or software could utilize this thread to acquire root
          privileges it might still be possible, so you'll have to make your on decision on
          performance vs security.</para>-->
      </answer>
    </qa>
    <qa>
      <question>How do I install terminatorX suid root?</question>
      <answer>
        <para>Ensure that you have read the <link ref="#11">entry above</link> before you 
           consider following the instructions below.
        </para>
        <para>As root <italic>cd</italic> into the directory you installed terminatorX to (typically
          that is <italic>/usr/local/bin</italic> or <italic>/usr/bin</italic>) and run the
          following commandline:</para>
        <para>
          <screen>chown root: ./terminatorX &amp;&amp; chmod u+s ./terminatorX</screen>
        </para>
      </answer>
    </qa>
    <qa>
      <question>Is there a Windows version of terminatorX?</question>
      <answer>
        <para>No, there is no such version, nor will I port it myself - as I hardly have the time
          to maintain the regular version. If you plan to port it,
          please let <person>
            <name>me</name>
            <email>alex@lisas.de</email>
          </person> 
          know.</para>
      </answer>
    </qa>
    <qa>
      <question>Where does the name come from?</question>
      <answer>
        <para>If you don't know find out a little something about <link
            ref="http://www.publicenemy.com">Public Enemy</link>. Learn who <link
            ref="http://www.publicenemy.com/soldiers/termx.php"> TerminatorX</link> is or <link
            ref="http://www.publicenemy.com/gallery/images/txday.jpg">see him</link> do his work</para>
      </answer>
    </qa>
  </faq>
</section>
