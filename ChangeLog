terminatorX - ChangeLog
All changes were done by me (Alexander Koenig) if not stated otherwise.
This is not a GNU-style ChangeLog but you sort of get the idea what was
changed.

[v3.2]
- implemented 2D-Scratching ;) You can now use the other axis of your mouse
  two modify the cutoff frequency of the lowpass filter (if enabled). The
  resonance factor can be set via the slider underneath "LP Filter". Seems
  to eat quite some CPU power though...
- Updated THANKS, AUTHORS
- as most people seem to use sox/mpg123 anyway and as I still get "I want mp3"
  emails I changed the configure script slightly: It now automatically enables
  the use of sox and mpg123 if these are available. If you still want 'em good
  old 16Bit/44.1Khz/Mono builtin routines you have to specify --enable-wavonly
  with your configure cmdline.
- Prepared the tarball for the Win32 port. You can now compile tX with cygwin
  and the Makefile.cygwin in the src directory if you have all the required
  libs (gtk, pthreads etc...). The resulting exe will run BUT is completely
  unusable for now... Stou Sandalski <tangui@cell2000.net> and I are planning
  to make it usable in the future.
- The About-Dialog now contains some info on how the binary was compiled

[v3.1]
- Optimized audio-rendering code for speed (might run on some machines
  with smaller buffsize (-> lower latency) than pre-3.1) - Hey, tX now uses
  less than 10% CPU (says kpm) with mixing enabled on my i586-200MMX machine!!  
- "fixed" stdout-output. Due to the pipe-buffering realtime schratching can
  not be considered usable for now :(
- Added config option --enable-scheduler, which will cause the terminatorX
  engine-thread to run with FIFO scheduling policy and highest priority. This
  might enable some machines to use smaller buffsizes. It requries root
  privileges though - either run terminatorX as root - or make terminatorX
  suid root WHICH IS A BAD IDEA FOR MULTI-USER SYSTEMS IF OTHER USERS CAN
  ACCESS THE BINARY ;) You only have to think about this when you experience
  buffer underruns with your desired latency. And it might not even help...
- Rehacked the de-clicking (fading) code. The old one tried to be much more
  intelligent - and failed fading out the signal sometimes. The new code
  is much simpler (faster) and is much more reliable.
- added common sense to the warp feature (f-key in scratch mode). The warping
  speed is still connected to the mouse speed but it's now adjusted to the
  sample size as well: you can warp through any sample completely with the same
  mouse distance.
- added debug configure switch. Enables (very few) debug messages for now. I
  decided not to enable the old V2.X messages as they are sent to stdout, which
  would sound pretty strange to people who use the stdout-option.
    
[v3.02] (unreleased)
- Fixed Adrian's name in the THANKS file. Sorry, Adrian.
- Corrected Makefile.am for license.c that did not build correctly on some 
  systems - Thanks to Michael Pruett <mikep@ugcs.caltech.edu>

[v3.01]
- fixed a bug that caused terminatorX to crash without --enable-sox or
  mpg123input.

[v3.0]
- Changed everything ;)
- switched from C++ to C for gtk's sake
- switched back two multithreading
- implemented new gtk+ gui and dialogs
- new mouse-sampling code now uses DGA's DirectMouse
- implemented "initalizing"-support for XInput devices.
- new (alpha) "pre-listening" feature in scratch/loop dialogs
- hacked vtt for click-free audio. Might be problematic with big
  kernel level buffersizes but scratching with big buffsize is no
  fun anyway.
- options are now stored in ~/.terminatorXrc.bin automatically (on exit)
  as well as windowsize and the last used filenames
- terminatorX now comes with a configure script - no more Makefile hacking
  required (nor a good idea ;) )
- new wavdisplay-widget update frequency is now configureable
- new position-display is much more visible which allows more precise
  scratching
- new mute-feature allows you to silence the scratch-playback completely
  while the loop keeps playing (press either <m>-key or right mouse-button.
- support for mouse buttons:
  o 1. (left) button: same as <SPACE>, do scratch
  o 2. (right) button: mute scratch
  o 3. (middle) button: stop
- wrote support for sox and mpg123. This enables terminatorX to read close
  to any audiofile. You need to have sox and mp3 and this feature (as it is
  still alpha) needs to be enabled via configure-switches see INSTALL
- licmak now is an awk script. Thanks Christian! I was also received two perl
  scripts (Thanks, guys!) but I now use the awk script as it is the smallest.
- introduced <F>-key to "warp" through scratch-sample (just check it out)
- dropped commandline arguments
- dropped old X-Code + Mouse warping madness
- bug fixes (less than bug introduces though ;) )


[v2.4] (unreleased)
- implemented a time counter
- licmak now finally is what it should be: a perl script (licmak.pl)
  it was contributed by: Adam Sjøgren <asjo@diku.dk>. Thanks!

[v2.3]
- X-Window background fixed
- wavfile overreading fixed by Andrew C. Bul+hac?k (acb@zikzak.net)
- Using portable type definitions now where required. If you don't
  have a <sys/types.h> on your system and your machines type sizes
  equal those of an X86-machine you can specify -DUSE_X86_TYPES in
  Makefile to compile without <sys/types.h>
- Slight change in audiodevice-handling that fixes improper buffsize
  settings on some soundcards (e.g. GUS)
- Implemented "keep device open"-feature. Needs to be enabled via the
  -DKEEP_DEV_OPEN switch in Makefile
- Added some comments to the Makefile for easier editing
- Added Big Endian support. Use -DBIG_ENDIAN_MACHINE for big endian hosts
  like ultrapenguin suns or linux ppc. There's also -DBIG_ENDIAN_AUDIO
  for big endian audio hardware (rare?) available, although proabably
  nobody will need this.
- Changed mix behaviour: Mix is now automatically turned on on startup if
  the user has specified a proper loop file. (with the --loop or -l switch)
- New mixing routine. You can now set the loop to scratch volume ratio with
  the cursor keys (left/right). If you modify the volumes while recording
  these action's will not be recorded. Saving happens with the currently
  set level.
- Fixed README-Bug said <m> instead of <x>
  
[v2.2]
- first released version
- added colors. more standard use of X11.
- added loop support.
- added statusbar with mode/status display
- added commandline options and help (on usage and keys)
- added raw/mixed save scratch feature
- added licmak to include license into binary
- new handling of XAutoRepeat, only turned off now when SPACE pressed.
- modified wave display (faster + nicer + incorrect (who cares anyway))
- Makefile fixed by Adrian Reber (adreit00@fht-esslingen.de)
- bug fixes

[prerelease]

[v2.1]
- added recording, playback of recording functionality

[v2.0]
- moved from multithreaded to singlethreaded
- position feedback
- bug fixes

[v1.0]
- mouse support
- no more position display due to pthread/X probs
- bug fixes

[v0.5]
- first version
- no mouse handling
- accelerating vtt via sinus
- multithreaded
- sound aliasing
