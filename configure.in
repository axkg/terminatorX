dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/tX_global.h)
AM_INIT_AUTOMAKE(terminatorX,3.5)
AM_CONFIG_HEADER(config.h)

AC_ARG_ENABLE(closedev, [  --enable-closedev       close audio device if not in use. [default=yes] ])
dnl AC_ARG_ENABLE(soxinput, [  --enable-soxinput       use sox as input converter. [default=no] ])
dnl AC_ARG_ENABLE(mpg123input, [  --enable-mpg123input    use mpg123 as input converter. [default=no] ])
AC_ARG_ENABLE(wavonly,  [  --enable-wavonly        enable the builtin wav routines. (no sox/mpg123) ])
AC_ARG_ENABLE(scheduler,[  --enable-scheduler      enable rt-scheduling (req. root-priv). [default=no] ])
AC_ARG_ENABLE(debug,    [  --enable-debug          enable debug output. [default=no] ])
AC_ARG_ENABLE(flash,    [  --enable-flash          enable flashes. [default=yes] ])
AC_ARG_ENABLE(3dnow,    [  --enable-3dnow          enables 3DNow! support. [default=no] ])
AC_ARG_ENABLE(benchmark,[  --enable-benchmark      creates a non-functional test version [default=no] ])

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

dnl Checks for libraries.
AC_CHECK_LIB(m, floor,, AC_MSG_ERROR([** math-lib not installed or broken **]))
AC_CHECK_LIB(pthread, pthread_mutex_lock,, AC_MSG_ERROR([** POSIX threads not installed or broken **]))
AM_PATH_GTK(1.2.0, , AC_MSG_ERROR([** GTK 1.2.0 not installed or broken **]))
AM_PATH_GLIB(1.2.0, , AC_MSG_ERROR([** GLIB 1.2.0 not installed or broken **]))

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/ioctl.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL

dnl Eval args
if test "$enable_closedev" == "no"; then
	AC_DEFINE(KEEP_DEV_OPEN)
fi

if test "$enable_wavonly" != "yes"; then
 	AC_CHECK_PROG(SOX_PROG, sox, yes)
	if test "$SOX_PROG" == "yes"; then
	 	AC_DEFINE(USE_SOX_INPUT)
	 	AC_CHECK_PROG(MPG123_PROG, mpg123, yes)
		if test "$MPG123_PROG" == "yes"; then
		 	AC_DEFINE(USE_MPG123_INPUT)
		fi
	fi
fi

dnl if test "$enable_mpg123input" == "yes"; then
dnl 	AC_CHECK_PROG(MPG123_PROG, mpg123, yes)
dnl 	AC_DEFINE(USE_MPG123_INPUT)
dnl 	AC_CHECK_PROG(SOX_PROG, sox, yes)
dnl 	AC_DEFINE(USE_SOX_INPUT)
dnl fi

dnl if test "$enable_soxinput" == "yes"; then
dnl 	AC_CHECK_PROG(SOX_PROG, sox, yes)
dnl 	AC_DEFINE(USE_SOX_INPUT)
dnl fi

if test "$enable_flash" == "no"; then
	AC_DEFINE(DONT_USE_FLASH)
fi 

if test "$enable_3dnow" == "yes"; then
	AC_DEFINE(USE_3DNOW)
fi 

if test "$enable_scheduler" == "yes"; then
	AC_DEFINE(USE_SCHEDULER)
fi

if test "$enable_debug" == yes; then
	AC_DEFINE(ENABLE_DEBUG_OUTPUT)
fi

if test "$enable_benchmark" == yes; then
	AC_DEFINE(CREATE_BENCHMARK)
fi

dnl Now Check for Xlibs - I do this here as other tests fail if these run earlier
AC_PATH_XTRA

AC_SUBST(X_CFLAGS)
AC_SUBST(X_PRE_LIBS)
AC_SUBST(X_EXTRA_LIBS)
AC_SUBST(X_LIBS)
AC_SUBST(x_libraries)

AC_CHECK_LIB(X11, XOpenDisplay,, AC_MSG_ERROR([** X11-libs not installed or broken **]), $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS)
AC_CHECK_LIB(Xext, XShmQueryExtension,, AC_MSG_ERROR([** Xext-libs not installed or broken **]), $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS)
AC_CHECK_LIB(Xi, XOpenDevice,, AC_MSG_ERROR([** XInput not installed or broken **]), $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS)
AC_CHECK_LIB(Xxf86dga, XF86DGAQueryExtension,, AC_MSG_ERROR([** DGA not installed or broken **]), $X_LIBS $X_PRE_LIBS -lXext -lX11 $X_EXTRA_LIBS)

AC_OUTPUT(Makefile src/Makefile)
